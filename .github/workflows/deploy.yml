name: Deploy Laravel Application to Production Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v3

    - name: üß∞ Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, zip, curl, mysql
        tools: composer:v2

    - name: üß© Install Composer Dependencies
      run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

    - name: üß± Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: üì¶ Install NPM Dependencies
      run: |
        npm ci
        npx update-browserslist-db@latest
        npm install vue-loader@latest

    - name: Prepare Remote Directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          sudo chown -R deployer:deployer /var/www/sms-laravel

    - name: üöÄ Synchronize Files to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "."
        TARGET: "/var/www/sms-laravel"
        ARGS: >
          -rltgoDzvO --delete
          --exclude .env
          --exclude node_modules
          --exclude vendor
          --exclude .git
          --exclude .github
          --exclude storage
          --exclude bootstrap/cache

    - name: ‚öôÔ∏è Run Remote Laravel Artisan Commands
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/sms-laravel
          mkdir -p bootstrap/cache storage/framework/{cache,sessions,views} storage/logs
          
          composer install --no-dev --optimize-autoloader
          cp .env.example .envv || true
          
          # Set proper permissions
          sudo chown -R www-data:www-data .
          sudo chmod -R 775 storage bootstrap/cache

          
          
    
